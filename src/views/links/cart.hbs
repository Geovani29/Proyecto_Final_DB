<body>
  <div class="cart-container">
    <div class="rectangles">
      <div class="rectangle rectangle-left">
        {{#each cart}}
        <div class="product">
          <img class="product-img" src="{{this.urlimagen}}" alt="{{this.nombre}}">
          <div class="product-details">
            <p>{{this.nombre}}</p>
            <p>{{this.descripcion}}</p>
            <p>Precio: ${{this.precio}}</p>
            <div class="qty-controls">
              <button class="change-qty" data-cart-id="{{this.cartId}}" data-action="decrease">-</button>
              <span class="qty">{{this.cantidad}}</span>
              <button class="change-qty" data-cart-id="{{this.cartId}}" data-action="increase">+</button>
            </div>
            <p class="subtotal">Subtotal: ${{multiply this.precio this.cantidad}}</p>
          </div>
          <div class="product-actions">
            <button class="delete-btn" data-cart-id="{{this.cartId}}">&times;</button>
          </div>
        </div>
        {{else}}
        <p>No hay productos en el carrito.</p>
        {{/each}}
      </div>
      <div class="rectangle rectangle-right">
        <div>
          <h2>Resumen del Pedido</h2>
          <p>Total: ${{total cart}}</p>
        </div>
        <div>
          <h3>Opciones de Entrega</h3>
          <label>
            <input type="radio" name="deliveryOption" value="domicilio">
            Entrega a domicilio
          </label>
          <div id="direccionDomicilio" style="display: none;">
            <h4>Direcciones Guardadas</h4>
            {{#each direcciones}}
            <label>
              <input type="radio" name="direccion" value="{{this.id}}">
              {{this.direccionCliente}}
            </label><br>
            {{/each}}
            <button id="addDireccionBtn">Agregar nueva dirección</button>
            <div id="nuevaDireccion" style="display: none;">
              <input type="text" id="nuevaDireccionInput" placeholder="Nueva Dirección">
              <button id="saveDireccionBtn">Guardar Dirección</button>
            </div>
          </div>
          <label>
            <input type="radio" name="deliveryOption" value="tienda">
            Recoger en tienda
          </label>
        </div>
        <button class="btn btn-success finalize-purchase">Finalizar compra</button>
      </div>
    </div>
  </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script>
    const images = ['pan.png', 'pan2.png', 'pan3.png', 'pan4.png']; // Añade aquí los nombres de todas tus imágenes

    function createBread() {
      var img = document.createElement('img');
      var randomImage = images[Math.floor(Math.random() * images.length)];
      img.src = `/img/${randomImage}`;
      img.style.width = "50px";
      img.style.left = Math.random() * window.innerWidth + 'px';
      img.className = 'falling-bread';
      img.style.animationDuration = Math.random() * 3 + 2 + 's';
      document.body.appendChild(img);

      setTimeout(() => {
        document.body.removeChild(img);
      }, 5000);
    }

    setInterval(createBread, 300); // Crea un nuevo "pan" cada 300 ms
  </script>
  <script>
    $(document).ready(function () {
      $('input[name="deliveryOption"]').change(function () {
        if ($(this).val() === 'domicilio') {
          $('#direccionDomicilio').show();
        } else {
          $('#direccionDomicilio').hide();
        }
      });

      $('#addDireccionBtn').click(function () {
        $('#nuevaDireccion').show();
      });

      $('#saveDireccionBtn').click(function () {
        const nuevaDireccion = $('#nuevaDireccionInput').val();
        if (nuevaDireccion) {
          $.ajax({
            url: '/links/addDireccion',
            type: 'POST',
            data: { direccion: nuevaDireccion },
            success: function (response) {
              if (response.success) {
                Swal.fire('Guardado!', 'Dirección guardada con éxito.', 'success').then(() => {
                  location.reload();
                });
              } else {
                Swal.fire('Error!', response.message, 'error');
              }
            }
          });
        } else {
          Swal.fire('Error!', 'Por favor ingrese una dirección.', 'error');
        }
      });

      $('.delete-btn').click(function (e) {
        e.preventDefault();
        var cartId = $(this).data('cart-id');
        Swal.fire({
          title: '¿Estás seguro?',
          text: "No podrás revertir esto!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Sí, eliminar!'
        }).then((result) => {
          if (result.isConfirmed) {
            $.ajax({
              url: '/links/cart/delete/' + cartId,
              type: 'POST',
              success: function (response) {
                Swal.fire(
                  'Eliminado!',
                  response.message,
                  'success'
                ).then((result) => {
                  if (result.isConfirmed || result.isDismissed) {
                    location.reload(); // Recarga la página para actualizar el estado del carrito
                  }
                });
              },
              error: function (xhr, status, error) {
                Swal.fire(
                  'Error!',
                  'No se pudo eliminar el producto. Inténtalo de nuevo.',
                  'error'
                );
              }
            });
          }
        });
      });

      $('.change-qty').click(function (e) {
        e.preventDefault();
        const cartId = $(this).data('cart-id');
        const action = $(this).data('action');
        const qtyDisplay = $(this).siblings('.qty');
        let currentQty = parseInt(qtyDisplay.text());

        if (action === 'increase') {
          currentQty++;
        } else if (action === 'decrease' && currentQty > 1) {
          currentQty--;
        }

        qtyDisplay.text(currentQty);

        const price = parseFloat($(this).closest('.product-details').find('p:nth-child(3)').text().replace('Precio: $', ''));
        const subtotal = price * currentQty;
        $(this).closest('.product').find('.subtotal').text(`Subtotal: $${subtotal.toFixed(2)}`);
        updateTotal();
      });

      function updateTotal() {
        let total = 0;
        $('.subtotal').each(function () {
          const subtotal = parseFloat($(this).text().replace('Subtotal: $', ''));
          total += subtotal;
        });
        $('.rectangle-right p').text(`Total: $${total.toFixed(2)}`);
      }

      $('.finalize-purchase').click(function (e) {
        e.preventDefault();
        const deliveryOption = $('input[name="deliveryOption"]:checked').val();
        let direccionId = null;
        if (deliveryOption === 'domicilio') {
          direccionId = $('input[name="direccion"]:checked').val();
          if (!direccionId) {
            Swal.fire('Error!', 'Por favor seleccione o agregue una dirección.', 'error');
            return;
          }
        }
        if (!deliveryOption) {
          Swal.fire('Error!', 'Por favor seleccione una opción de entrega.', 'error');
          return;
        }
        Swal.fire({
          title: '¿Estás seguro?',
          text: "¿Deseas finalizar la compra?",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Sí, finalizar compra!'
        }).then((result) => {
          if (result.isConfirmed) {
            $.ajax({
              url: '/links/cart/checkout',
              type: 'POST',
              data: { deliveryOption, direccionId },
              success: function (response) {
                if (response.success) {
                  console.log("Roles: ", response.roles);
                  Swal.fire(
                    'Completado!',
                    response.message,
                    'success'
                  ).then(() => {
                    if (response.roles === 'admin') {
                      window.location.href = '/links';
                    } else if (response.roles === 'usuario') {
                      window.location.href = '/links/listUsers';
                    } else {
                      window.location.href = '/profile';
                    }
                  });
                } else {
                  Swal.fire(
                    'Error!',
                    response.message,
                    'error'
                  );
                }
              },
              error: function (xhr, status, error) {
                Swal.fire(
                  'Error!',
                  'No se pudo finalizar la compra. Inténtalo de nuevo.',
                  'error'
                );
              }
            });
          }
        });
      });
    });
  </script>
</body>

</html>